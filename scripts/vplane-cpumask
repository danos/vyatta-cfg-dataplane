#!/usr/bin/env python3

# Copyright (c) 2021, AT&T Intellectual Property.
# All rights reserved.
#
# SPDX-License-Identifier: LGPL-2.1-only

"""This updates the CPU affinity settings for the dataplane."""

import sys
import configparser
from argparse import ArgumentParser

DP_CONF = '/etc/vyatta/dataplane.conf'

def _delete_cpumask(dpcfg, key_cpumask='cpumask'):

    if not dpcfg.has_option('Dataplane', key_cpumask):
        return

    with open(DP_CONF, 'w') as dpcfg_fp:
        del dpcfg['Dataplane'][key_cpumask]
        dpcfg.write(dpcfg_fp, space_around_delimiters=False)

def _set_cpumask(dpcfg, cpumask, key_cpumask='cpumask'):

    if dpcfg['Dataplane'].get(key_cpumask) == cpumask:
        return

    with open(DP_CONF, 'w') as dpcfg_fp:
        dpcfg['Dataplane'][key_cpumask] = cpumask
        dpcfg.write(dpcfg_fp, space_around_delimiters=False)


def _main():
    arg_parser = ArgumentParser()
    arg_parser.add_argument('--set', action='store', metavar='CPUMASK',
                            help='CPU range', required=False)
    arg_parser.add_argument('--delete', action='store_true',
                            help='Delete CPU affinity config', required=False)
    args = arg_parser.parse_args()

    cpumask = args.set

    if not args.delete and not args.set:
        print('No action specified.')
        sys.exit(1)

    dpcfg = configparser.ConfigParser()
    try:
        dpcfg.read(DP_CONF)
    except configparser.Error as err:
        print('Failed to load {}: {}'.format(DP_CONF, err))
        sys.exit(1)

    if dpcfg.has_section('Dataplane') is False:
        print('Invalid dataplane config. Aborting.')
        sys.exit(1)

    if args.delete:
        try:
            _delete_cpumask(dpcfg)
        except (IOError, configparser.Error) as err:
            print('Failed to delete CPU affinity setting from dataplane configuration: {}'
                  .format(err))
            sys.exit(1)
    else:
        try:
            _set_cpumask(dpcfg, cpumask)
        except (IOError, configparser.Error)  as err:
            print('Failed to update CPU affinity in dataplane configuration: {}'.format(err))
            sys.exit(1)


if __name__ == '__main__':
    _main()
