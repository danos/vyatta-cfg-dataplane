#! /usr/bin/perl
# Copyright (c) 2015 Brocade Communications Systems, Inc.
# All rights reserved.
#
# SPDX-License-Identifier: LGPL-2.1-only

use strict;
use warnings;

use Getopt::Long;
use Config::Tiny;

my $DATAPLANE_CFG = '/etc/vyatta/dataplane.conf';

sub read_cpumask {
    my $cfg = Config::Tiny->read($DATAPLANE_CFG);
    die "Can't read $DATAPLANE_CFG: $!\n" unless $cfg;

    return $cfg->{Dataplane}->{cpumask};
}

sub show_cpumask {
    my $mask = read_cpumask();

    if ( defined($mask) ) {
        printf "cpus = %s\n", $mask;
    } else {
        print "cpumask not set.\n";
    }

    exit 0;
}

sub set_cpumask {
    my $mask = shift;

    my $cfg = Config::Tiny->read($DATAPLANE_CFG);
    die "Can't read $DATAPLANE_CFG: $!\n"
      unless defined($cfg);

    my $oldmask = $cfg->{Dataplane}->{cpumask};
    if ( !defined($oldmask) || $mask ne $oldmask ) {
        $cfg->{Dataplane}->{cpumask} = $mask;

        die "Can't write $DATAPLANE_CFG: $!\n"
          unless $cfg->write($DATAPLANE_CFG);
    }
}

sub delete_cpumask {
    my $cfg = Config::Tiny->read($DATAPLANE_CFG);
    die "Can't read $DATAPLANE_CFG: $!\n"
      unless defined($cfg);

    delete $cfg->{Dataplane}->{cpumask};
    die "Can't write $DATAPLANE_CFG: $!\n"
      unless $cfg->write($DATAPLANE_CFG);
}

my ( $cpumask, $delete_mask );

GetOptions(
    'set=s'    => \$cpumask,
    'delete'   => \$delete_mask,
) or die "Unknown option\n";

set_cpumask($cpumask)    if defined($cpumask);
delete_cpumask($cpumask) if $delete_mask;
